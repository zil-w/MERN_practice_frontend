{"version":3,"sources":["button.js","phonebookEntry.js","entriesDisplay.js","userInput.js","newEntryForm.js","nameFilter.js","phoneServices.js","submitMessage.js","app.js","index.js"],"names":["Button","handleDelete","onClick","PhonebookEntry","name","number","EntriesDisplay","searchTerm","entries","deletionHandler","filter","person","toLowerCase","includes","map","id","UserInput","props","value","onChange","NewEntryForm","submissionHandler","newName","nameChange","newPhoneNum","phoneChange","onSubmit","type","NameFilter","dbPath","phoneServices","addNumber","newEntry","axios","post","then","response","data","deleteNumber","delete","getAllNumbers","get","modifyNumber","console","log","put","SubmitMessage","messageStatus","style","isError","color","width","borderWidth","border","message","App","useState","persons","setPersons","setNewName","setPhoneNum","setSearchTerm","setMessageStatus","useEffect","numbers","inputTermsReset","event","target","preventDefault","existingEntry","find","trim","undefined","idJSON","concat","setTimeout","catch","err","error","overwriteMsg","window","confirm","changedEntry","entry","updatePersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.562e6f7c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({handleDelete})=>{\r\n    return(\r\n        <button onClick={handleDelete}>delete</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './button'\r\n\r\nconst PhonebookEntry = ({name, number, handleDelete})=>{\r\n    \r\n    return(\r\n        <>\r\n            <p>{name} {number}</p> <Button handleDelete = {handleDelete}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PhonebookEntry","import React from 'react'\r\nimport PhonebookEntry from './phonebookEntry'\r\n\r\nconst EntriesDisplay = ({searchTerm, entries, deletionHandler}) =>{\r\n    const returnFilteredPersons = () =>{\r\n        if(searchTerm === ''){\r\n            return entries\r\n        }\r\n        else{\r\n            return (entries.filter(person => person.name.toLowerCase().includes(searchTerm)))\r\n        }\r\n    }\r\n\r\n    //what are my assumptions here? that by making the function deletionHandler accepting an id, it'd have an unique variation for each component that inherits it?\r\n    //so in the end what we needed, for a function taking an argument that you intend to provide in the parent component, you need to define it in the child's property as a function tha returns the function provided with the argument\r\n    //okay it is running right off the bat if we don't stick the function fed with arguments within a function\r\n    //I believe we can just pass a function from parent to child component indefinitely, arrow function is only required right before you use it\r\n    return(\r\n        <>\r\n            {returnFilteredPersons().map(person =><PhonebookEntry name = {person.name} number={person.number} key={person.id} handleDelete ={() => deletionHandler(person.name, person.id)}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EntriesDisplay","import React from 'react'\r\n\r\nconst UserInput = (props)=>{\r\n    //console.log(`userInput receiving: `, props)\r\n\r\n    return(\r\n        <div>\r\n            {props.name}: <input value = {props.value} onChange={props.onChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInput","import React from 'react'\r\nimport UserInput from './userInput'\r\n\r\nconst NewEntryForm = ({submissionHandler, newName, nameChange, newPhoneNum, phoneChange}) => {\r\n    return(\r\n        <form onSubmit = {submissionHandler}>\r\n          <div>\r\n            <UserInput name='name' value = {newName} onChange = {nameChange}/> {/*trying to separate these into their own components fail for some reason, the event handler returned to UserInput returns undefined*/}\r\n            <UserInput name='number' value={newPhoneNum} onChange={phoneChange}/>{/*okay you are being a bit too careless, the issue was simply because your attribute is named wrong in the props, next time, just debug by printing props instead of the function, the function just gives you undefined, which isn't helpful*/}\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewEntryForm","import React from 'react'\r\n\r\nconst NameFilter = ({searchTerm, onChange}) => {\r\n    return(\r\n        <div>\r\n            filter shown with <input value={searchTerm} onChange={onChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameFilter","//import React from 'react'\r\nimport axios from 'axios'\r\n\r\nconst dbPath = `/api/persons`\r\n\r\nconst addNumber = newEntry => {\r\n    //console.log('entry to add',  newEntry)\r\n    const request = axios.post(dbPath, newEntry)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteNumber = id => {\r\n    const request = axios.delete(`${dbPath}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getAllNumbers = () =>{\r\n    const request = axios.get(dbPath)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst modifyNumber = (id, newEntry) => {\r\n    console.log('entry to modify',  newEntry, ' at ', `${dbPath}/${id}`)\r\n    const request = axios.put(`${dbPath}/${id}`, newEntry)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst phoneServices = {addNumber, deleteNumber,getAllNumbers, modifyNumber}\r\n\r\nexport default phoneServices","//actually, nvm, if you want to use JSX, you have to import react\r\nimport React from 'react'\r\n\r\nconst SubmitMessage = ({messageStatus}) => {\r\n    if(messageStatus === null){\r\n        return(<></>)\r\n    }\r\n    else{\r\n        const errorStyling = {\r\n            color: 'red',\r\n            width: 500,\r\n            borderWidth: 'thin',\r\n            border: 'solid red'\r\n        }\r\n        \r\n        const successStyling = {\r\n            color: 'green',\r\n            width: 500,\r\n            borderWidth: 'thin',\r\n            border: 'solid green'\r\n        }\r\n \r\n        return(\r\n            <p style={(messageStatus.isError)?errorStyling:successStyling}>{messageStatus.message}</p>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default SubmitMessage\r\n","import React, {useState, useEffect} from 'react'\r\nimport EntriesDisplay from './entriesDisplay'\r\nimport NewEntryForm from './newEntryForm'\r\nimport NameFilter from './nameFilter'\r\nimport phoneServices from './phoneServices'\r\nimport SubmitMessage from './submitMessage'\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState([]) //e.g.  [{ name: 'Arto Hellas', number: '040-123456', id: '0'}...]\r\n    //const [lastIndex, setLastIndex] = useState(0) //no longer needed since mongoDB\r\n    const [newName, setNewName ] = useState('')\r\n    const [newPhoneNum, setPhoneNum] = useState('')\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [messageStatus, setMessageStatus] = useState(null)\r\n\r\n    useEffect(()=>{//okay it seems like this is just called once when the app is rendered, and the app is re-rendered once the promise is fufilled\r\n        phoneServices\r\n        .getAllNumbers()\r\n        .then(numbers =>{\r\n            setPersons(numbers)\r\n            // if(numbers.length>0){ //no longer needed since mongoDB\r\n            //     setLastIndex(numbers[numbers.length-1].id)\r\n            // }\r\n        })\r\n    },[])\r\n\r\n    const nameChange = (event) =>{\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const phoneChange = (event) =>{\r\n        setPhoneNum(event.target.value)\r\n    }\r\n\r\n    const searchTermChange = (event)=>{\r\n        setSearchTerm(event.target.value.toLowerCase())\r\n    }\r\n\r\n    const inputTermsReset = () => {\r\n        setNewName('')\r\n        setPhoneNum('')\r\n    }\r\n\r\n    const submissionHandler = (event) =>{\r\n        event.preventDefault()\r\n        const existingEntry = persons.find(person => person.name === newName.trim())\r\n\r\n        if( existingEntry === undefined){\r\n            //Okay by 3.13, even before then, we no longer need to specify ID, as it's automatically generated by mongoDB\r\n            const newEntry = {name: newName.trim(), number: newPhoneNum}\r\n            phoneServices\r\n            .addNumber(newEntry)\r\n            .then(idJSON =>{ //dunno if this will work let's see\r\n                setPersons(persons.concat({...newEntry, id:idJSON.id}))\r\n                //setLastIndex(lastIndex+1)\r\n                setMessageStatus({isError: false, message: `${newName} has been successfully added!`})\r\n                setTimeout(()=>setMessageStatus(null), 3000)\r\n                inputTermsReset()\r\n            })\r\n            .catch(err=>{\r\n                //console.log('addition failed ', err, '  properties ', Object.keys(err))\r\n                setMessageStatus({isError: true, message: err.response.data.error})\r\n                setTimeout(()=>setMessageStatus(null), 3000)\r\n            })\r\n        }\r\n        else{\r\n            const overwriteMsg = `${newName} is already in the phonebook. Would you like to overwrite their info?`\r\n            const doOverwrite = window.confirm(overwriteMsg)\r\n            if(doOverwrite){\r\n                phoneServices\r\n                .modifyNumber(existingEntry.id, {...existingEntry, number: newPhoneNum})\r\n                .then(changedEntry => {\r\n                    setPersons(persons.map(person => (person.id === existingEntry.id)? changedEntry: person))\r\n                    setMessageStatus({isError: false, message: `${newName}'s number has been updated!`})\r\n                    setTimeout(()=>setMessageStatus(null), 3000)\r\n                    inputTermsReset()\r\n                })\r\n                .catch(err=>{\r\n                    console.log('addition failed ', err)\r\n                    setMessageStatus({isError: true, message: err.response.data.error})\r\n                    setTimeout(()=>setMessageStatus(null), 3000)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const deletionHandler = (name, id) =>{\r\n            const message = `Are you sure that you want to delete ${name}?`\r\n            const doDelete = window.confirm(message)\r\n            if(doDelete){\r\n                phoneServices\r\n                .deleteNumber(id)\r\n                .then(entry =>{\r\n                    const updatePersons = persons.filter(person => person.id !== id)\r\n                    setPersons(updatePersons)\r\n                    // if(id === lastIndex && updatePersons.length>0){ //no longer needed since mongoDB\r\n                    //     setLastIndex(updatePersons[updatePersons.length-1].id)\r\n                    // }\r\n                    // else if(updatePersons.length === 0){\r\n                    //     setLastIndex(0)\r\n                    // }\r\n                    setMessageStatus({isError: false, message: `${name} has been deleted!`})\r\n                    setTimeout(()=>setMessageStatus(null), 3000)\r\n                })\r\n                .catch(error =>{\r\n                    console.log('deletion failed ', error)\r\n                    setMessageStatus({isError: true, message: `${name} has already been deleted!`})\r\n                    setTimeout(()=>setMessageStatus(null), 3000)\r\n                })\r\n            }\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Phonebook</h2>\r\n        <SubmitMessage messageStatus = {messageStatus}/>\r\n        <NameFilter searchTerm ={searchTerm} onChange={searchTermChange} />\r\n        <NewEntryForm \r\n            submissionHandler = {submissionHandler}\r\n            newName = {newName}\r\n            nameChange = {nameChange}\r\n            newPhoneNum = {newPhoneNum}\r\n            phoneChange ={phoneChange}\r\n        />\r\n        <h2>Numbers</h2>\r\n        <EntriesDisplay searchTerm = {searchTerm} entries ={persons} deletionHandler = {deletionHandler}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}